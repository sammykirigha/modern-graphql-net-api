# backend 
name: SonarCloud
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.x

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Install SonarCloud scanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Install Coverlet
        run: dotnet tool install --global coverlet.console   

      - name: Build and analyze
        env:
          GIT_HUB_ACTIONS: ${{ secrets.GIT_HUB_ACTIONS }}
          SONARCLOUD_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
        shell: pwsh
        run: |
          dotnet sonarscanner begin /k:"modern-dotnet-graphql-api" /o:"serviceprovider" /d:sonar.token="${{ secrets.SONARCLOUD_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths=integration-test-coverage.xml /d:sonar.dotnet.excludeTestProjects=true
          dotnet build modern-dotnet-graphql-api.sln
          coverlet ServiceProvider.IntegrationTests/bin/Debug/net8.0/ServiceProvider.IntegrationTests.dll --target "dotnet" --targetargs "test ServiceProvider.IntegrationTests/ServiceProvider.IntegrationTests.csproj --no-build" -f=opencover -o="integration-test-coverage.xml"
          dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONARCLOUD_TOKEN }}"